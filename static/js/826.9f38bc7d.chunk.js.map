{"version":3,"file":"static/js/826.9f38bc7d.chunk.js","mappings":"sQAOe,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,QACHR,EAASS,GACT,MACF,IAAK,WACHP,EAAYO,GAKjB,EAmBD,OACE,kBAAMC,SAlBa,SAAAJ,GAGnB,GAFAA,EAAEK,iBACmB,6BAA6BC,KAAKb,GACvD,CAIA,IAAMc,EAAW,CACfd,MAAOA,EAAMe,cACbb,SAAAA,GAEFc,QAAQC,IAAIH,GACZV,GAASc,EAAAA,EAAAA,IAAeJ,IACxBb,EAAS,IACTE,EAAY,GARX,MAFCgB,EAAAA,GAAAA,MAAY,yBAWf,EAG+BC,UAAWC,EAAAA,EAAAA,KAAzC,WACE,iBAAKD,UAAWC,EAAAA,EAAAA,UAAhB,WACE,kBAAOD,UAAWC,EAAAA,EAAAA,MAAlB,SAA6B,YAC7B,kBACEC,KAAK,QACLb,KAAK,QACLC,MAAOV,EACPuB,SAAUjB,EACVc,UAAWC,EAAAA,EAAAA,MACXG,aAAa,WAGjB,iBAAKJ,UAAWC,EAAAA,EAAAA,UAAhB,WACE,kBAAOD,UAAWC,EAAAA,EAAAA,MAAlB,SAA6B,eAC7B,kBACEC,KAAK,WACLb,KAAK,WACLC,MAAOR,EACPqB,SAAUjB,EACVc,UAAWC,EAAAA,EAAAA,YAGf,oBAAQC,KAAK,SAASF,UAAWC,EAAAA,EAAAA,OAAjC,WACE,SAAC,MAAD,IAAW,cAIlB,C,qBCvED,KAAgB,KAAO,oBAAoB,UAAY,yBAAyB,OAAS,sBAAsB,MAAQ,qB","sources":["Pages/forms/LogInForm.jsx","webpack://react-homework-template/./src/Pages/forms/Forms.module.css?2a98"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginUserThunk } from '../../Redux/operation/operation';\nimport css from './Forms.module.css';\nimport { toast } from 'react-toastify';\nimport { CiLogin } from 'react-icons/ci';\n\nexport default function LogInForm() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValidEmail = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n    if (!isValidEmail) {\n      toast.error('Invalid email address.');\n      return;\n    }\n    const formData = {\n      email: email.toLowerCase(),\n      password,\n    };\n    console.log(formData);\n    dispatch(loginUserThunk(formData));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <div className={css.formGroup}>\n        <label className={css.label}>Email:</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          className={css.input}\n          autoComplete=\"on\"\n        />\n      </div>\n      <div className={css.formGroup}>\n        <label className={css.label}>Password:</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          className={css.input}\n        />\n      </div>\n      <button type=\"submit\" className={css.button}>\n        <CiLogin /> Login\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Forms_form__HVnS5\",\"formGroup\":\"Forms_formGroup__NDzD7\",\"button\":\"Forms_button__4cs9l\",\"input\":\"Forms_input__bbc97\"};"],"names":["LogInForm","useState","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","e","target","name","value","onSubmit","preventDefault","test","formData","toLowerCase","console","log","loginUserThunk","toast","className","css","type","onChange","autoComplete"],"sourceRoot":""}