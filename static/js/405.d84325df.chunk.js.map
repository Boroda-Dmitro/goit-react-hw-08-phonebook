{"version":3,"file":"static/js/405.d84325df.chunk.js","mappings":"6PAOe,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAGMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MACF,IAAK,QACHR,EAASQ,GACT,MACF,IAAK,WACHN,EAAYM,GAKjB,EAwBD,OACE,kBAAMC,SAvBa,SAAAH,GAEnB,GADAA,EAAEI,iBACET,EAASU,OAAS,EACpBC,EAAAA,GAAAA,MAAA,mCAKF,GADqB,6BAA6BC,KAAKd,GACvD,CAIA,IAAMe,EAAW,CACff,MAAAA,EACAE,SAAAA,GAEFE,GAASY,EAAAA,EAAAA,IAAkBD,IAC3BhB,EAAQ,IACRE,EAAS,IACTE,EAAY,GARX,MAFCU,EAAAA,GAAAA,MAAY,yBAWf,EAG+BI,UAAWC,EAAAA,EAAAA,KAAzC,WACE,iBAAKD,UAAWC,EAAAA,EAAAA,UAAhB,WACE,kBAAOD,UAAWC,EAAAA,EAAAA,MAAlB,SAA6B,eAC7B,kBACEC,KAAK,OACLrB,KAAK,OACLW,MAAOX,EACPsB,SAAUd,EACVW,UAAWC,EAAAA,EAAAA,YAGf,iBAAKD,UAAWC,EAAAA,EAAAA,UAAhB,WACE,kBAAOD,UAAWC,EAAAA,EAAAA,MAAlB,SAA6B,YAC7B,kBACEC,KAAK,QACLrB,KAAK,QACLW,MAAOT,EACPoB,SAAUd,EACVW,UAAWC,EAAAA,EAAAA,YAGf,iBAAKD,UAAWC,EAAAA,EAAAA,UAAhB,WACE,kBAAOD,UAAWC,EAAAA,EAAAA,MAAlB,SAA6B,eAC7B,kBACEC,KAAK,WACLrB,KAAK,WACLW,MAAOP,EACPkB,SAAUd,EACVW,UAAWC,EAAAA,EAAAA,YAGf,mBAAQC,KAAK,SAASF,UAAWC,EAAAA,EAAAA,OAAjC,SAA6C,eAKlD,C,qBC1FD,KAAgB,KAAO,oBAAoB,UAAY,yBAAyB,OAAS,sBAAsB,MAAQ,qB","sources":["Pages/forms/registrationForm.jsx","webpack://react-homework-template/./src/Pages/forms/Forms.module.css?2a98"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport css from './Forms.module.css';\nimport { registerUserThunk } from 'Redux/operation/operation';\nimport { toast } from 'react-toastify';\n\n\nexport default function RegistrationForm() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (password.length < 7) {\n      toast.error(`you's password is too shot`);\n\n      return;\n    }\n    const isValidEmail = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n    if (!isValidEmail) {\n      toast.error('Invalid email address.');\n      return;\n    }\n    const formData = {\n      email,\n      password,\n    };\n    dispatch(registerUserThunk(formData));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <div className={css.formGroup}>\n        <label className={css.label}>Username:</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          className={css.input}\n        />\n      </div>\n      <div className={css.formGroup}>\n        <label className={css.label}>Email:</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          className={css.input}\n        />\n      </div>\n      <div className={css.formGroup}>\n        <label className={css.label}>Password:</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          className={css.input}\n        />\n      </div>\n      <button type=\"submit\" className={css.button}>\n        Register\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Forms_form__HVnS5\",\"formGroup\":\"Forms_formGroup__NDzD7\",\"button\":\"Forms_button__4cs9l\",\"input\":\"Forms_input__bbc97\"};"],"names":["RegistrationForm","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","e","target","value","onSubmit","preventDefault","length","toast","test","formData","registerUserThunk","className","css","type","onChange"],"sourceRoot":""}