{"version":3,"file":"static/js/346.6949d030.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","webpack://react-homework-template/./src/components/EditContact/EditContact.module.css?a7c1","components/EditContact/EditContact.jsx","components/Contacts/ContactListItem.jsx","webpack://react-homework-template/./src/components/Contacts/Contactlist.module.css?db3c","components/Contacts/ContactsList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","Pages/Contacts/contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { postNewContact } from 'Redux/operation/operation';\nimport css from './ContactForm.module.css';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { allContacts } from 'Redux/selectors';\nimport { toast } from 'react-toastify';\nimport { BsPersonPlus } from 'react-icons/bs';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(allContacts);\n\n  const handleChange = e => {\n    const target = e.target.name;\n    if (target === 'name') {\n      setName(e.target.value);\n    } else {\n      setPhone(e.target.value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      name,\n      phone,\n    };\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase() === name.toLowerCase() ||\n          contact.number === phone\n      )\n    ) {\n      toast.error(`${name} or ${phone} is already in contacts`);\n    } else {\n      dispatch(postNewContact(newContact));\n      setName('');\n      setPhone('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={phone}\n        />\n      </label>\n      <button type=\"submit\" className={css.button}>\n        <BsPersonPlus /> Add contacts\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts__item\":\"Contacts_contacts__item__7pKPZ\",\"link\":\"Contacts_link__lq0yV\",\"text\":\"Contacts_text__Cijp1\",\"buttonDel\":\"Contacts_buttonDel__3vzEf\",\"buttonEdit\":\"Contacts_buttonEdit__gHv9q\"};","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"EditContact_box__ugjwl\"};","import { useState } from 'react';\nimport css from './EditContact.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { allContacts } from 'Redux/selectors';\nimport { toast } from 'react-toastify';\nimport { BsPersonPlus } from 'react-icons/bs';\nimport { editContact } from 'Redux/operation/operation';\n\nconst EditContact = ({ id, onClose }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(allContacts);\n\n  const contact = contacts.find(contact => contact._id === id);\n\n  const [name, setName] = useState(contact.name);\n  const [phone, setPhone] = useState(contact.phone);\n\n  const handleChange = e => {\n    const target = e.target.name;\n    if (target === 'name') {\n      setName(e.target.value);\n    } else {\n      setPhone(e.target.value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const editedContact = {\n      name,\n      phone,\n    };\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase() === name.toLowerCase() ||\n          contact.number === phone\n      )\n    ) {\n      toast.error(`${name} or ${phone} is already in contacts`);\n    } else {\n      dispatch(editContact({id, editedContact}));\n      onClose()\n    }\n  };\n\n  return (\n    <div className={css.box}>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <label>\n          Name\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n            value={name}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            className={css.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n            value={phone}\n          />\n        </label>\n        <button type=\"submit\" className={css.button}>\n          <BsPersonPlus /> Edit contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditContact;\n","import PropTypes from 'prop-types';\nimport { LuX } from 'react-icons/lu';\nimport { BsPencil } from 'react-icons/bs';\nimport { useModal } from '../../hooks/useModal';\nimport css from './Contacts.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteOneContact } from 'Redux/operation/operation';\nimport { BsPersonPlusFill, BsPhoneFill } from 'react-icons/bs';\nimport { Modal } from '../Modal/Modal';\nimport EditContact from '../EditContact/EditContact';\n\nexport const ContactListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const { isModalOpen, openModal, closeModal } = useModal();\n   return (\n    <>\n      <li className={css.contacts__item}>\n        <button type=\"button\" className={css.buttonEdit} onClick={openModal}>\n          <BsPencil size={14} />\n        </button>\n\n        <p className={css.text}>\n          <BsPersonPlusFill /> {name} :\n        </p>\n        <p className={css.link}>\n          <BsPhoneFill /> {number}\n        </p>\n\n        <button\n          type=\"button\"\n          onClick={() => dispatch(deleteOneContact(id))}\n          className={css.buttonDel}\n        >\n          <LuX size={24} />\n        </button>\n      </li>\n      {isModalOpen && (\n        <Modal onClose={closeModal}>\n          <EditContact id={id} onClose={closeModal}></EditContact>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts__box\":\"Contactlist_contacts__box__FcnlH\",\"text\":\"Contactlist_text__24S9+\",\"container\":\"Contactlist_container__7D8Ny\"};","import { ContactListItem } from './ContactListItem';\nimport css from './Contactlist.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  allContacts,\n  filteredContacts,\n  isLoading,\n  isLoggedIn,\n} from '../../Redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../Redux/operation/operation';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactsList = () => {\n  const loggedIn = useSelector(isLoggedIn);\n  const contacts = useSelector(allContacts);\n  const contactsFromFilter = useSelector(filteredContacts);\n  const loading = useSelector(isLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (loggedIn) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, loggedIn]);\n\n  return (\n    <div className={css.container}>\n      {loading ? (\n        <Loader />\n      ) : (\n        <ul className={css.contacts__box}>\n          {contacts.length !== 0 ? (\n            contactsFromFilter.length !== 0 ? (\n              contactsFromFilter.map(({ _id, name, phone }) => (\n                <ContactListItem key={_id} name={name} number={phone} id={_id} />\n              ))\n            ) : (\n              <li className={css.text}>\n                We couldn't find any matching contacts\n              </li>\n            )\n          ) : (\n            <li className={css.text}>You don't have any contacts</li>\n          )}\n        </ul>\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"fiter_box\":\"Filter_fiter_box__rzgDN\"};","import css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from '../../Redux/Filter/Slice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <div className={css.fiter_box}>\n      <label className={css.label}>Find contacts by name</label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={e => dispatch(filterContacts(e.target.value))}\n        className={css.input}\n      />\n    </div>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/Contacts/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function ContactsPage() {\n  return <>\n    <ContactForm />\n    <Filter />\n    <ContactsList />\n  </>;\n}\n"],"names":["ContactForm","useState","name","setName","phone","setPhone","dispatch","useDispatch","contacts","useSelector","allContacts","handleChange","e","target","value","onSubmit","preventDefault","newContact","find","contact","toLowerCase","number","toast","postNewContact","className","css","type","pattern","title","required","onChange","id","onClose","_id","editedContact","editContact","ContactListItem","useModal","isModalOpen","openModal","closeModal","onClick","size","deleteOneContact","Modal","ContactsList","loggedIn","isLoggedIn","contactsFromFilter","filteredContacts","loading","isLoading","useEffect","fetchContacts","Loader","length","map","Filter","filterContacts","ContactsPage"],"sourceRoot":""}